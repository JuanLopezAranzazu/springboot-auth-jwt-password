# Variables de configuracion
spring.application.name=auth-service
server.port=9090

# Configuracion de la base de datos
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}

# JWT
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION}

# ADMIN
admin.firstName=${ADMIN_FIRST_NAME}
admin.lastName=${ADMIN_LAST_NAME}
admin.email=${ADMIN_EMAIL}
admin.password=${ADMIN_PASSWORD}
admin.phone=${ADMIN_PHONE}
admin.address=${ADMIN_ADDRESS}

# MAIL
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Configuracion de la persistencia JPA
## Estrategia para la generacion de la base de datos
## create-drop: Crea la base de datos y la elimina al finalizar la aplicacion
## create: Crea la base de datos si no existe
## update: Modifica la base de datos sin eliminar datos existentes
## validate: Valida que la estructura de la base de datos coincida con las entidades
## none: No realiza ninguna accion sobre la base de datos
spring.jpa.hibernate.ddl-auto=update

## Habilita las transacciones durante la renderizacion de la vista
spring.jpa.open-in-view=true

## Especifica el dialecto SQL para PostgreSQL
spring.jpa.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

## Muestra las consultas SQL en la terminal
spring.jpa.show-sql=true